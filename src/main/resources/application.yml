server:
  port: 18080

spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: true
      routes:
      - id: openapi
        uri: http://localhost:${server.port}
        predicates:
        - Path=/v3/api-docs/**
        filters:
        - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
      
      - id: doc-service
#        uri: http://localhost:9093
        uri: lb://doc-service
        predicates:
        - Path=/doc/**
        filters:
        - RewritePath=/doc/(?<path>.*), /$\{path}
     
      - id: admin-service
#        uri: http://localhost:8093
        uri: lb://admin-service
        predicates:
        - Path=/admin/**
        filters:
          - RewritePath=/admin/(?<path>.*), /$\{path}
      
      - id: user-management-service
        uri: lb://user-management-service
        predicates:
        - Path=/user-management/**
        filters:
        - RewritePath=/user-management/(?<path>.*), /$\{path}
        - name: SCGPreFilter

      - id: be-ec-catalog-service
        uri: lb://be-ec-catalog-service
        predicates:
          - Path=/catalog-service/**
        filters:
          - RewritePath=/catalog-service/(?<path>.*), /$\{path}
          - name: SCGPreFilter

      - id: be-storage-service
        uri: lb://be-storage-service
        predicates:
          - Path=/storage/**
        filters:
          - RewritePath=/storage/(?<path>.*), /$\{path}
          - name: SCGPreFilter

      - id: main-service
#        uri: http://localhost:8082
        uri: lb://main-service
        predicates:
          - Path=/*, /*/*
        filters:
          - RewritePath=/(?<path>.*), /$\{path}/
          - name: SPAGatewayFilter

  main:
    allow-bean-definition-overriding: true

okta:
  oauth2:
    issuer: ${OKTA_ISSUER}
    audience: audience
    client-id: ${OKTA_CLIENT_ID}
    client-secret: ${OKTA_CLIENT_SECRET}
#    redirect-uri: /login/oauth2/code/okta
    scopes:
    - openid 
    - email  
    - profile

eureka:
  client:
#    enabled: true
#    register-with-eureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
#    fetchRegistry: true
#    healthcheck:
#      enabled: true
  instance:
    instance-id: ${spring.application.name}:${random.int}  

management:
  endpoints:
    web:
      exposure:
        include:
          - '*'
          
logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    root: info
    org.springframework: warn
    org.notabarista: info
    org.springframework.cloud: debug
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 2
  file:
    name: /var/log/${spring.application.name}.log
